<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Essential parameters -->
  <arg name="map_path" description="point cloud and lanelet2 map directory path"/>
  <arg name="vehicle_model" description="vehicle model name"/>
  <arg name="sensor_model" description="sensor model name"/>
  <!-- Optional parameters -->
  <arg name="rviz" default="true" description="launch rviz"/>
  <arg name="lanelet2_map_file" default="lanelet2_map.osm" description="lanelet2 map file name"/>
  <arg name="pointcloud_map_file" default="pointcloud_map.pcd" description="pointcloud map file name"/>

  <!-- Global parameters -->
  <include file="$(find-pkg-share autoware_global_parameter_loader)/launch/global_params.launch.py">
    <arg name="vehicle_model" value="$(var vehicle_model)"/>
  </include>

  <!-- Vehicle -->
  <include file="$(find-pkg-share vehicle_launch)/launch/vehicle.launch.xml">
    <arg name="vehicle_model" value="$(var vehicle_model)"/>
    <arg name="sensor_model" value="$(var sensor_model)"/>
  </include>

  <!-- System -->
  <include file="$(find-pkg-share system_launch)/launch/system.launch.xml">
    <arg name="run_mode" value="online"/>
    <arg name="sensor_model" value="$(var sensor_model)"/>
  </include>

  <!-- Map -->
  <include file="$(find-pkg-share map_launch)/launch/map.launch.py">
    <arg name="lanelet2_map_path" value="$(var map_path)/$(var lanelet2_map_file)" />
    <arg name="pointcloud_map_path" value="$(var map_path)/$(var pointcloud_map_file)"/>
  </include>

  <!-- Sensing -->
  <include file="$(find-pkg-share sensing_launch)/launch/sensing.launch.xml">
    <arg name="launch_driver" value="true"/>
    <arg name="sensor_model" value="$(var sensor_model)"/>
    <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
    <arg name="vehicle_mirror_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/mirror.param.yaml"/>
  </include>

  <!-- Localization -->
  <include file="$(find-pkg-share localization_launch)/launch/localization.launch.xml">
  </include>

  <!-- Perception -->
  <include file="$(find-pkg-share perception_launch)/launch/perception.launch.xml">
    <!-- options for mode: camera_lidar_fusion, lidar, camera -->
    <arg name="mode" value="camera_lidar_fusion" />
    <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
  </include>

  <!-- Planning -->
  <include file="$(find-pkg-share planning_launch)/launch/planning.launch.xml">
  </include>

  <!-- Control -->
  <include file="$(find-pkg-share control_launch)/launch/control.launch.py">
    <!-- options for lateral_controller_mode: mpc_follower, pure_pursuit -->
    <arg name="lateral_controller_mode" value="mpc_follower" />
  </include>

  <!-- Autoware API -->
  <include file="$(find-pkg-share autoware_api_launch)/launch/autoware_api.launch.xml">
    <arg name="init_simulator_pose" value="false"/>
    <arg name="init_localization_pose" value="true"/>
  </include>

  <!-- Rviz -->
  <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(find-pkg-share autoware_launch)/rviz/autoware.rviz -s $(find-pkg-share autoware_launch)/rviz/image/autoware.png" if="$(var rviz)">
  </node>

  <!-- Web Controller -->
  <include file="$(find-pkg-share autoware_web_controller)/launch/autoware_web_controller.launch.xml" />

</launch>
