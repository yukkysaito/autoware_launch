<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="run_mode" default="online" description="options: online, planning_simulation"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)" />

  <group>
    <push-ros-namespace namespace="/system"/>

    <!-- System Monitor -->
    <group>
      <push-ros-namespace namespace="system_monitor"/>
      <include file="$(find-pkg-share system_monitor)/launch/system_monitor.launch.py">
        <arg name="cpu_monitor_config_file" value="$(find-pkg-share system_launch)/config/system_monitor/cpu_monitor.param.yaml"/>
        <arg name="hdd_monitor_config_file" value="$(find-pkg-share system_launch)/config/system_monitor/hdd_monitor.param.yaml"/>
        <arg name="mem_monitor_config_file" value="$(find-pkg-share system_launch)/config/system_monitor/mem_monitor.param.yaml"/>
        <arg name="net_monitor_config_file" value="$(find-pkg-share individual_params)/config/$(var vehicle_id)/net_monitor.param.yaml"/>
        <arg name="ntp_monitor_config_file" value="$(find-pkg-share system_launch)/config/system_monitor/ntp_monitor.param.yaml"/>
        <arg name="process_monitor_config_file" value="$(find-pkg-share system_launch)/config/system_monitor/process_monitor.param.yaml"/>
        <arg name="gpu_monitor_config_file" value="$(find-pkg-share system_launch)/config/system_monitor/gpu_monitor.param.yaml"/>
      </include>
    </group>

    <!-- State Monitor -->
    <group if="$(eval &quot;'$(var run_mode)'=='online'&quot;)">
      <include file="$(find-pkg-share autoware_state_monitor)/launch/autoware_state_monitor.launch.xml">
        <arg name="config_file" value="$(find-pkg-share autoware_state_monitor)/config/autoware_state_monitor.param.yaml" />
        <arg name="th_arrived_distance_m" value="0.5" />
      </include>
    </group>
    <group if="$(eval &quot;'$(var run_mode)'=='planning_simulation'&quot;)">
      <include file="$(find-pkg-share autoware_state_monitor)/launch/autoware_state_monitor.launch.xml">
        <arg name="config_file" value="$(find-pkg-share autoware_state_monitor)/config/autoware_state_monitor.planning_simulation.param.yaml" />
        <arg name="th_arrived_distance_m" value="0.5" />
      </include>
    </group>

    <!-- Error Monitor -->
    <group if="$(eval &quot;'$(var run_mode)'=='online'&quot;)">
      <include file="$(find-pkg-share autoware_error_monitor)/launch/autoware_error_monitor.launch.xml">
        <arg name="use_emergency_hold" value="true" />
        <arg name="config_file" value="$(find-pkg-share system_launch)/config/autoware_error_monitor.param.yaml" />
      </include>
    </group>
    <group if="$(eval &quot;'$(var run_mode)'=='planning_simulation'&quot;)">
      <include file="$(find-pkg-share autoware_error_monitor)/launch/autoware_error_monitor.launch.xml">
        <arg name="use_emergency_hold" value="true" />
        <arg name="config_file" value="$(find-pkg-share system_launch)/config/autoware_error_monitor.planning_simulation.param.yaml" />
      </include>
    </group>

    <!-- Emergency Handler -->
    <include file="$(find-pkg-share emergency_handler)/launch/emergency_handler.launch.xml">
      <arg name="config_file" value="$(find-pkg-share system_launch)/config/emergency_handler.param.yaml" />
    </include>

    <!-- Autoware Version Publisher-->
    <node pkg="autoware_version" exec="autoware_version" name="autoware_version" output="screen">
    </node>

    <!-- Topic State Monitor -->
    <include file="$(find-pkg-share system_launch)/launch/awapi_topic_state_monitor.launch.xml" />
    <include file="$(find-pkg-share system_launch)/launch/control_topic_state_monitor.launch.xml" />
    <include file="$(find-pkg-share system_launch)/launch/planning_topic_state_monitor.launch.xml" />
  </group>
</launch>
