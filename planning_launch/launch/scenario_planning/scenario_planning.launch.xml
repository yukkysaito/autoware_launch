<launch>

  <!-- scenario selector -->
  <include file="$(find-pkg-share scenario_selector)/launch/scenario_selector.launch.xml">
    <arg name="input_lane_driving_trajectory" value="/planning/scenario_planning/lane_driving/trajectory"/>
    <arg name="input_parking_trajectory" value="/planning/scenario_planning/parking/trajectory"/>
    <arg name="input_lanelet_map" value="/map/vector_map"/>
    <arg name="input_route" value="/planning/mission_planning/route"/>
    <arg name="input_twist" value="/localization/twist"/>
    <arg name="output_scenario" value="/planning/scenario_planning/scenario"/>
    <arg name="output_trajectory" value="/planning/scenario_planning/scenario_selector/trajectory"/>
    <arg name="is_parking_completed" value="/planning/scenario_planning/parking/is_completed"/>
  </include>

  <!-- velocity planning with max velocity, acceleration, jerk, stop point constraint -->
  <group>
    <include file="$(find-pkg-share motion_velocity_optimizer)/launch/motion_velocity_optimizer.launch.xml">
      <arg name="input_trajectory" value="/planning/scenario_planning/scenario_selector/trajectory"/>
      <arg name="output_trajectory" value="/planning/scenario_planning/trajectory"/>
      <arg name="param_path" value="$(find-pkg-share planning_launch)/config/scenario_planning/common/motion_velocity_optimizer/motion_velocity_optimizer.param.yaml"/>
    </include>

  </group>

  <!-- scenarios-->
  <group>
    <!-- lane driving -->
    <include file="$(find-pkg-share planning_launch)/launch/scenario_planning/lane_driving.launch.xml">
    </include>
    <!-- parking -->
    <include file="$(find-pkg-share planning_launch)/launch/scenario_planning/parking.launch.xml">
    </include>
  </group>
</launch>
